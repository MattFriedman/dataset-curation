<!DOCTYPE html>
<html>
<head>
    <title>Instruction-Output Pairs</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f4f4f9;
        }
        td[contenteditable="true"] {
            background-color: #e0f7fa; /* Light cyan background for editable cells */
            border: 1px dashed #007bff; /* Dashed border to indicate editability */
        }
        h1 {
            color: #333;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        a {
            text-decoration: none;
            color: #007bff;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />

</head>
<body>
<div style="display: flex; align-items: center; justify-content: space-between;">
    <a href="/"><img src="/logo.svg" alt="Logo" style="width: 50px; height: 50px; margin-right: 10px;"></a>
    <h1>Instruction-Output Pairs</h1>
    <a href="/add" style="margin-left: auto; text-decoration: none; color: #007bff;">Add a new pair</a>
</div>
<table border="1">
    <thead>
    <tr>
        <th>Instruction</th>
        <th>Output</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    <% pairs.forEach(function(pair) { %>
        <tr data-id="<%= pair.id %>">
            <td contenteditable="false" onblur="saveEdit('<%= pair.id %>', 'instruction', this.innerText)"><%= pair.instruction %></td>
            <td contenteditable="false" onblur="saveEdit('<%= pair.id %>', 'output', this.innerText)"><%= pair.output %></td>
            <td>
                <button onclick="editPair('<%= pair.id %>', '<%= pair.instruction %>', '<%= pair.output %>')" style="background:none;border:none;cursor:pointer;">
                    <svg
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      stroke="black"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" />
                      <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" />
                    </svg>
                </button>
                <button onclick="deletePair('<%= pair.id %>', '<%= pair.instruction %>', '<%= pair.output %>')" style="background:none;border:none;cursor:pointer;">
                    <svg height="16" width="16" xmlns="http://www.w3.org/2000/svg">
                        <path d="m5.5 1s-.6856953.0357617-.5.5v1.5h-2.5s-.5 0-.5.5v2.5h1v8s0 1 1 1h7.96875c.031 0 1.03125 0 1.03125-1v-8h1v-2.5c0-.5-.5-.5-.5-.5h-2.5v-1.5c0-.5-.5-.5-.5-.5zm.5 1h4v1h-4zm-3 2h2 6 2v1h-9.03125-.96875zm1 2h8v.25 4.388672 3.111328c0 .1385-.1115.25-.25.25h-7.5c-.1385 0-.25-.1115-.25-.25v-3.111328-4.388672zm2 1v6h1v-6zm3 0v6h1v-6z" fill="#666"/>
                    </svg>
                </button>
            </td>
        </tr>
    <% }); %>
    </tbody>
</table>

<script>
    function deletePair(id, instruction, output) {
        if (confirm(`Are you sure you want to delete this pair?\n\nInstruction: ${instruction}\nOutput: ${output}`)) {
            fetch(`/pairs/${id}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    const row = document.querySelector(`tr[data-id='${id}']`);
                    if (row) {
                        row.remove();
                    } 
                } else {
                    alert('Failed to delete pair');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }

    const editingRows = new Set();

    function toggleEditState(id, isEditable) {
        const row = document.querySelector(`tr[data-id='${id}']`);
        const cells = row.querySelectorAll('td[contenteditable]');
        cells.forEach(cell => {
            cell.setAttribute('contenteditable', isEditable);
            if (isEditable) {
                cell.style.backgroundColor = '#e0f7fa'; // Light cyan background
                cell.style.border = '1px dashed #007bff'; // Dashed border
            } else {
                cell.style.backgroundColor = ''; // Reset background
                cell.style.border = ''; // Reset border
            }
        });
    }

    function editPair(id) {
        editingRows.add(id);
        toggleEditState(id, true);
    }

    function saveEdit(id, field, value) {
        if (!editingRows.has(id)) return;

        fetch(`/pairs/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ [field]: value })
        })
        .then(response => {
            if (!response.ok) {
                alert('Failed to update pair');
            }
        })
        .catch(error => console.error('Error:', error));
    }

    document.addEventListener('focusout', (event) => {
        const row = event.target.closest('tr[data-id]');
        if (row) {
            const id = row.getAttribute('data-id');
            setTimeout(() => {
                if (!row.contains(document.activeElement)) {
                    editingRows.delete(id);
                    toggleEditState(id, false);
                }
            }, 0);
        }
    });
</script>
</body>
</html>
